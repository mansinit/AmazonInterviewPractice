#reverse a link list
#create a class
#time complexity is O(n) and space comp is O(1)
class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
class LinkList:
    def __init__(self):
        self.head=None
    def reverse(self):
        prev=None
        cur=self.head
        while(cur is not None):
            next=cur.next
            cur.next=prev
            prev=cur
            cur=next
        self.head=prev
    def push(self,data):
        new_node=Node(data)
        new_node.next=self.head
        self.head=new_node
    def print_list(self):
        temp=self.head
        while temp is not None:
            print(temp.data,)
            temp=temp.next
llist=LinkList()
llist.push(1)
llist.push(2)
llist.push(3)
llist.print_list()
llist.reverse()
llist.print_list()
